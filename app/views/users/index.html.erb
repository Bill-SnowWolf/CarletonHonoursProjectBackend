<h1>Listing users</h1>

<table>
  <thead>
    <tr>
      <th>Id</th>
      <th>Name</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody id="user-table-body">
    <% @users.each do |user| %>
      <tr>
        <td><%= user.id %></td>
        <td><%= user.name %></td>
        <td><%= link_to 'Show', user %></td>
        <td><%= link_to 'Edit', edit_user_path(user) %></td>
        <td><%= link_to 'Destroy', user, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<% if @user.status == 'offline' %>
<%= link_to 'Go Online', online_user_path(@user) %>
<% else %>
<%= link_to 'Go Offline', offline_user_path(@user) %>
<% end %>

<%= link_to 'New User', new_user_path %>

<a href="/users/sign_out" data-method="delete" rel="nofollow">Log Out</a>

<script type="text/javascript">

$(function() {
  var key = "<%= Pusher.key %>"
  var currentUser = {
    id: "<%= @user.id %>",
    name: "<%= @user.name %>"
  }
  var pusher = new Pusher(key, {
    auth: {
      params: currentUser
    }
  });
  // var pusher = new Pusher(key, {
  //   auth: {
  //     params: {
  //       id: "Manager"
  //     }
  //   }  
  // });

  var lobbyMembers = [];

  var channel = pusher.subscribe('presence-lobby');

  channel.bind('pusher:subscription_succeeded', function() {
    console.log("Subscription Succeeded.");

    channel.members.each(function(member) {
      console.log(member.id + " " + member.info.name + " is in this lobby.");      
      
      addMemberToLobby(member);
    });    
  });

  channel.bind('pusher:member_added', function(member) {
    console.log(member.id + " " + member.info.name + " joined lobby.");      

    addMemberToLobby(member);
  });

  channel.bind('pusher:member_removed', function(member) {
    console.log(member.id + " " + member.info.name + " left this lobby.");      

    removeMemberFromLobby(member);
  });

  var addMemberToLobby = function(member) {
    var flag = true;
    for (var m in lobbyMembers) {
      if (m.id == member.id) {
        flag = false;
        break;
      }
    }
    if (flag) {
      lobbyMembers.push(member);
      addMemberToUserTable(member);  
    }
  };

  var removeMemberFromLobby = function(member) {
    removeMemberFromUserTable(member);

    for (var m in lobbyMembers) {
      if (m.id == member.id) {
        var index = lobbyMembers.indexOf(m);
        lobbyMembers.splice(m, 1);
      }
      break;
    }
  }

  var addMemberToUserTable = function(member) {
    var table = document.getElementById("user-table-body");

    var row = table.insertRow(-1);
    row.id = "member-row-" + member.id;
    
    var idCell = row.insertCell(0);
    idCell.innerHTML = member.id;

    var nameCell = row.insertCell(1);
    nameCell.innerHTML = member.info.name;    
  };

  var removeMemberFromUserTable = function(member) {
    var row = document.getElementById("member-row-" + member.id);
    var table = document.getElementById("user-table-body");    
    table.deleteRow(row.rowIndex - 1);
  }
});

</script>